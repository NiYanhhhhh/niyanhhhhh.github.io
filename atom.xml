<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>NIYANhhhhh的博客</title>
  
  
  <link href="http://www.niyanhhhhh.top/atom.xml" rel="self"/>
  
  <link href="http://www.niyanhhhhh.top/"/>
  <updated>2023-04-23T14:34:34.827Z</updated>
  <id>http://www.niyanhhhhh.top/</id>
  
  <author>
    <name>NIYANhhhhh</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>「C语言笔记」杂项</title>
    <link href="http://www.niyanhhhhh.top/2023/04/11/%E3%80%8CC%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0%E3%80%8D%E6%9D%82%E9%A1%B9/"/>
    <id>http://www.niyanhhhhh.top/2023/04/11/%E3%80%8CC%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0%E3%80%8D%E6%9D%82%E9%A1%B9/</id>
    <published>2023-04-10T18:39:26.000Z</published>
    <updated>2023-04-23T14:34:34.827Z</updated>
    
    <content type="html"><![CDATA[<p><a href="/clearning/" title="目录">目录</a></p><blockquote><p><em>这里记录着一些C语言写程序过程中容易忘记的东西。</em></p></blockquote><p>持续更新中…<br>最后更新时间: 2023-4-23</p><h3 id="关于时间"><a href="#关于时间" class="headerlink" title="关于时间"></a>关于时间</h3><h4 id="使用-lt-sys-time-h-gt-和gettimeofday-struct-timeval-void"><a href="#使用-lt-sys-time-h-gt-和gettimeofday-struct-timeval-void" class="headerlink" title="使用&lt;sys/time.h&gt;和gettimeofday(struct timeval*, void *)"></a>使用&lt;sys/time.h&gt;和gettimeofday(struct timeval*, void *)</h4><p>返回自1970年1月1日UTC时间00:00:00起经过的时间，第一个变量为传入时间的指针，结构为</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">timeval</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> __USE_TIME_BITS64</span></span><br><span class="line">  <span class="type">__time64_t</span> tv_sec;<span class="comment">/* Seconds.  */</span></span><br><span class="line">  <span class="type">__suseconds64_t</span> tv_usec;<span class="comment">/* Microseconds.  */</span></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">  <span class="type">__time_t</span> tv_sec;<span class="comment">/* Seconds.  */</span></span><br><span class="line">  <span class="type">__suseconds_t</span> tv_usec;<span class="comment">/* Microseconds.  */</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h4 id="使用-lt-time-h-gt-和clock-void"><a href="#使用-lt-time-h-gt-和clock-void" class="headerlink" title="使用&lt;time.h&gt;和clock(void)"></a>使用&lt;time.h&gt;和clock(void)</h4><p>返回自程序开始执行以来的时钟滴答数。如果将其除以常数CLOCKS_PER_SEC，将获得程序在CPU中已运行多长时间（以秒为单位）。</p><h4 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h4><p>以1到1000,000,000求和为例</p><figure class="highlight c"><figcaption><span>tictoc.h</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> HEADER_FILE_TICTOC</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HEADER_FILE_TICTOC</span></span><br><span class="line"></span><br><span class="line"><span class="type">clock_t</span> __clock_begin;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">timeval</span> __<span class="title">time_begin</span>, __<span class="title">time_end</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> tic __clock_begin=clock()</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> toc <span class="keyword">if</span> (__clock_begin == -1) printf(<span class="string">&quot;toc error!\n&quot;</span>); \</span></span><br><span class="line"><span class="meta">                               <span class="keyword">else</span> printf(<span class="string">&quot;clock time used: %.3fms\n&quot;</span>, (float) (clock() - __clock_begin)/CLOCKS_PER_SEC*1000); __clock_begin=-1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> timetic gettimeofday(&amp;__time_begin, 0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> timetoc gettimeofday(&amp;__time_end, 0); printf(<span class="string">&quot;real time used: %.3fms\n&quot;</span>, 1000*((__time_end.tv_sec - __time_begin.tv_sec) + (__time_end.tv_usec - __time_begin.tv_usec)*1e-6))</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><figure class="highlight c"><figcaption><span>gettime.c</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;tictoc.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span> <span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// Start measuring time</span></span><br><span class="line">    tic;</span><br><span class="line">    timetic;</span><br><span class="line">    </span><br><span class="line">    <span class="type">long</span> <span class="type">int</span> n = <span class="number">1000</span>*<span class="number">1000</span>*<span class="number">1000</span>;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;n; sum += ++i);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Result: %lld\n&quot;</span>, sum);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Stop measuring time and calculate the elapsed time</span></span><br><span class="line">    toc;</span><br><span class="line">    timetoc;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数重载"><a href="#函数重载" class="headerlink" title="函数重载"></a>函数重载</h3><p>C语言本身没有函数重载，一种简单的实现办法如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> GET_MACRO(_1,_2,_3,NAME,...) NAME</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOO(...) GET_MACRO(__VA_ARGS__, FOO3, FOO2, FOO1)(__VA_ARGS__)</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">FOO1</span><span class="params">(<span class="type">int</span> arg1)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">FOO2</span><span class="params">(<span class="type">int</span> arg1, <span class="type">int</span> arg2)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">FOO3</span><span class="params">(<span class="type">int</span> arg1, <span class="type">int</span> arg2, <span class="type">int</span> arg3)</span>;</span><br></pre></td></tr></table></figure><p>宏替换的结果为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FOO(1) =&gt; FOO1(1)</span><br><span class="line">FOO(1,2) =&gt; FOO2(1,2)</span><br><span class="line">FOO(1,2,3) =&gt; FOO3(1,2,3)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;/clearning/&quot; title=&quot;目录&quot;&gt;目录&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;这里记录着一些C语言写程序过程中容易忘记的东西。&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;持续更新中…&lt;br&gt;最后更新时间: 2023</summary>
      
    
    
    
    
    <category term="Clearning" scheme="http://www.niyanhhhhh.top/tags/Clearning/"/>
    
    <category term="C语言" scheme="http://www.niyanhhhhh.top/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>书博山道中壁</title>
    <link href="http://www.niyanhhhhh.top/2023/03/16/%E5%B0%91%E5%B9%B4%E4%B8%8D%E8%AF%86%E6%84%81%E6%BB%8B%E5%91%B3/"/>
    <id>http://www.niyanhhhhh.top/2023/03/16/%E5%B0%91%E5%B9%B4%E4%B8%8D%E8%AF%86%E6%84%81%E6%BB%8B%E5%91%B3/</id>
    <published>2023-03-16T10:05:36.000Z</published>
    <updated>2023-04-09T18:33:10.761Z</updated>
    
    <content type="html"><![CDATA[<h3 id="丑奴儿-·-书博山道中壁"><a href="#丑奴儿-·-书博山道中壁" class="headerlink" title="丑奴儿 · 书博山道中壁"></a>丑奴儿 · 书博山道中壁</h3><p><strong>辛弃疾</strong>「宋代」</p><hr><p>少年不识愁滋味，爱上层楼。爱上层楼，为赋新词强说愁。</p><p>而今尽识愁滋味，欲说还休。欲说还休，却道：天凉好个秋！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;丑奴儿-·-书博山道中壁&quot;&gt;&lt;a href=&quot;#丑奴儿-·-书博山道中壁&quot; class=&quot;headerlink&quot; title=&quot;丑奴儿 · 书博山道中壁&quot;&gt;&lt;/a&gt;丑奴儿 · 书博山道中壁&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;辛弃疾&lt;/strong&gt;「宋代」&lt;/p&gt;
&lt;</summary>
      
    
    
    
    
    <category term="诗词" scheme="http://www.niyanhhhhh.top/tags/%E8%AF%97%E8%AF%8D/"/>
    
  </entry>
  
</feed>
